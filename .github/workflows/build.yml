name: Builds

env:
  CABAL_VERSION: "3.2.0.0"
  GHCUP_URL: "https://gitlab.haskell.org/puffnfresh/ghcup-hs/-/jobs/372556/artifacts/raw/out/x86_64-linux-ghcup-0.1.5"
  GHCUP_JSON_URL: "https://gitlab.haskell.org/haskell/ghcup-hs/-/raw/3055529d4ceab463d92c3a5bbd0a10a0d7fabd9f/ghcup-0.0.2.json"
on:
  release:
    types: [created]
jobs:

  build:
    runs-on: ubuntu-latest
    container: alpine:3.10

    strategy:
      fail-fast: false
      matrix:
        ghc: ['8.10.1', '8.8.3', '8.6.5']

    steps:
    - run: |
        apk add \
          bash \
          git \
          curl \
          grep \
          gzip \
          build-base \
          binutils-gold \
          gmp-dev \
          zlib-dev \
          ncurses-dev \
          ncurses-static \
          && ln -s /usr/lib/libncursesw.so.6 /usr/lib/libtinfow.so.6 \
          && curl -o ghcup "$GHCUP_URL" \
          && chmod +x ghcup \
          && ./ghcup --url-source "$GHCUP_JSON_URL" install cabal "$CABAL_VERSION" \
          && ./ghcup --url-source "$GHCUP_JSON_URL" install ghc ${{ matrix.ghc }} \
          && ./ghcup set ${{ matrix.ghc }} \
          && echo "::add-path::$HOME/.ghcup/bin"

    - run: |
        apk add \
          perl
      if: matrix.ghc == '8.8.3' || matrix.ghc == '8.6.5'

    - run: |
        tail -n +1 $HOME/.ghcup/logs/*
      if: ${{ failure() }}

    - uses: actions/checkout@v2
      with:
        submodules: true

    # - name: Cache Cabal
    #   uses: actions/cache@v1.2.0
    #   with:
    #     path: ~/.cabal
    #     key: ${{ runner.OS }}-${{ matrix.ghc }}-cabal-0
    
    - name: Shorten binary names
      shell: bash
      run: |
        sed -i.bak -e 's/haskell-language-server/hls/g' \
                   -e 's/haskell_language_server/hls/g' \
                   haskell-language-server.cabal
        sed -i.bak -e 's/Paths_haskell_language_server/Paths_hls/g' \
                   src/**/*.hs exe/*.hs
  
    - run: cabal update

    - run: cabal build floskell -v2

    - name: Build Server
      run: cabal build exe:hls -O2 --disable-documentation -fdist-binary --enable-executable-static
          
    - name: Find Server Binary
      id: find_server_binary
      shell: bash
      run: |
        HLS=$(find dist-newstyle \( -name 'hls' -o -name 'hls.exe' \) -type f)
        gzip --best $HLS
        echo ::set-output name=hls_binary::$HLS.gz

    - name: Upload Server Binary
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.find_server_binary.outputs.hls_binary }}
        asset_name: haskell-language-server-${{ runner.OS }}-${{ matrix.ghc }}.gz
        asset_content_type: application/gzip

    - name: Build Wrapper
      if: matrix.ghc == '8.10.1'
      run: cabal build exe:hls-wrapper -O2 --disable-documentation -fdist-binary --enable-executable-static

    - name: Find Wrapper Binary
      if: matrix.ghc == '8.10.1'
      id: find_wrapper_binary
      shell: bash
      run: |
        HLS_WRAPPER=$(find dist-newstyle \( -name 'hls-wrapper' -o -name 'hls-wrapper.exe' \) -type f)
        gzip --best $HLS_WRAPPER
        echo ::set-output name=hls_wrapper_binary::$HLS_WRAPPER.gz

    - name: Upload Wrapper
      if: matrix.ghc == '8.10.1'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ${{ steps.find_wrapper_binary.outputs.hls_wrapper_binary }}
        asset_name: haskell-language-server-wrapper-${{ runner.OS }}.gz
        asset_content_type: application/gzip

